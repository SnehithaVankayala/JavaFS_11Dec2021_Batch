Day-1 and Day-2 Assignment:
===========================
2. List down Data Types in Java (with wrapper class name, memory size,
   range)
   in a tabular format.

Answer:   byte         Byte       1 byte      -128 to 127
          short        Short      2 bytes     -32,768 to 32,767
          int          Integer    4 bytes     -2,147,483,648 to 2,147,483,647
          long         Long       8 bytes     -9,223,372,036,854,775,808 to 9,223,372,036,854,775,807
          float        Float      4 bytes
          double       Double     8 bytes
          char         Character  2 bytes
          String
          boolean      Boolean    1 bit


3. Write examples for increment and decrement operators
  
   (i) public class Main {
  public static void main(String[] args) {
    int x = 5;
    ++x;
    System.out.println(x);
  }
}

   answer: 6

  (ii) public class Main {
  public static void main(String[] args) {
    int x = 5;
    --x;
    System.out.println(x);
  }
}
   
   answer: 4

  (iii) int x;
        int y;

     // Increment operators
     // Pre-increment: x is incremented by 1, then y is assigned the value of x
     x = 1;
     y = ++x;     x is 2, y is also 2

    // Post-increment: y is assigned the value of x, then x is incremented by 1
    x = 1;
    y = x++;     y is 1, x is 2

    // Decrement operators
    // Pre-decrement: x is decremented by 1, then y is assigned the value of x
    x = 1;
    y = --x;     x is 0, y is also 0

   // Post-decrement: y is assigned the value of x, then x is decremented by 1
    x = 1;
    y = x--;     y is 1, x is 0


4. Write java code for below programs:
    a. Factorial of a number
 code :

        public class FindFactorial {

 public static void main(String[] args) {

  int number = 4;
  int factorial = number;

  for (int i = (number - 1); i > 1; i--) {
   factorial = factorial * i;
  }

  System.out.println("Factorial of " + number + " is " + factorial);
 }
}


    b. nCr and nPr values
  
  code: 

      class NcrAndNpr
{
	double fact(double n)
	{
	int i=1;
             	    double fact=1;
	    while(i<=n)
	    {
	   	   fact=fact*i++;
 	    }
  	      return fact;
	}
public static void main(String arg[])	
{
	Scanner sc=new Scanner(System.in);
	System.out.println("Enter value of n");
               int n=sc.nextInt();
	System.out.println("Enter value of r");
               int r=sc.nextInt();
	if(n>=r)
	{
		System.out.println("The value of "+n+"p"+r+" is : "+npr(n,r));	
		System.out.println("The value of "+n+"c"+r+" is : "+ncr(n,r));
	}
	else
		System.out.println("Please enter n>=r");					
}
static double ncr(int n,int r)
{
	NcrAndNpr p=new NcrAndNpr( );
             	double nc=p.fact(n)/(p.fact(n-r)*p.fact(r));
	return nc;
}
static double npr(int n,int r)
{
	NcrAndNpr p=new NcrAndNpr( );
	double np=p.fact(n)/p.fact(n-r);	
	return np;
}
}

5. Write the concepts discussed about strings in the class.

 Answer: Strings are used for storing text.A String variable contains a collection of characters surrounded by double quotes.
          Once created, a string is immutable that is its value cannot be changed.


6. Research and write what is String pool in java

Answer: String pool is nothing but a storage area in Java heap where string literals stores. It is also known as String Intern Pool or String Constant Pool. It is just like object allocation. By default, it is empty and privately maintained by the Java String class. Whenever we create a string the string object occupies some space in the heap memory. Creating a number of strings may increase the cost and memory too which may reduce the performance also.

The JVM performs some steps during the initialization of string literals that increase the performance and decrease the memory load. To decrease the number of String objects created in the JVM the String class keeps a pool of strings.

When we create a string literal, the JVM first check that literal in the String pool. If the literal is already present in the pool, it returns a reference to the pooled instance. If the literal is not present in the pool, a new String object takes place in the String pool.

7. Write Java code to read number from user and print multipilcation table of the number.


code: 

      import java.util.Scanner;
public class Multiplication_Table 
{
    public static void main(String[] args) 
    {
        Scanner s = new Scanner(System.in);
	System.out.print("Enter number:");        
	int n=s.nextInt();
        for(int i=1; i <= 10; i++)
        {
            System.out.println(n+" * "+i+" = "+n*i);
        }
    }
}